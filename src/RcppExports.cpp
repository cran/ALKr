// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// optimGascuel
double optimGascuel(NumericVector params, NumericVector lj, NumericVector li, NumericVector pi_, double threshold, int maxiter);
RcppExport SEXP ALKr_optimGascuel(SEXP paramsSEXP, SEXP ljSEXP, SEXP liSEXP, SEXP pi_SEXP, SEXP thresholdSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type params(paramsSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type lj(ljSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type li(liSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type pi_(pi_SEXP );
        Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP );
        Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP );
        double __result = optimGascuel(params, lj, li, pi_, threshold, maxiter);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// finalGascuel
NumericMatrix finalGascuel(NumericVector params, NumericVector lj, NumericVector li, NumericVector pi_, double threshold, int maxiter);
RcppExport SEXP ALKr_finalGascuel(SEXP paramsSEXP, SEXP ljSEXP, SEXP liSEXP, SEXP pi_SEXP, SEXP thresholdSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type params(paramsSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type lj(ljSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type li(liSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type pi_(pi_SEXP );
        Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP );
        Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP );
        NumericMatrix __result = finalGascuel(params, lj, li, pi_, threshold, maxiter);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// hoenigC
List hoenigC(List AAk, List FFik, List FFiz, int threshold, int maxiter);
RcppExport SEXP ALKr_hoenigC(SEXP AAkSEXP, SEXP FFikSEXP, SEXP FFizSEXP, SEXP thresholdSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< List >::type AAk(AAkSEXP );
        Rcpp::traits::input_parameter< List >::type FFik(FFikSEXP );
        Rcpp::traits::input_parameter< List >::type FFiz(FFizSEXP );
        Rcpp::traits::input_parameter< int >::type threshold(thresholdSEXP );
        Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP );
        List __result = hoenigC(AAk, FFik, FFiz, threshold, maxiter);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
